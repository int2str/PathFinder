cxx = clang++
ar = ar

builddir = build
b = $builddir

cflags = -O3 -g -std=c++23 -Wextra -Wconversion -Wall -pedantic -Werror -I. $
  -Ilib/testrunner/include -Ilib/jsonlib
ldflags = -Wl,--gc-sections -Wl,--relax -L$b $libs

rule cxx
    command = $cxx -MMD -MF $out.d $cflags -c $in -o $out
    description = C++ $out
    depfile = $out.d

rule link
    command = $cxx $cflags $ldflags -o $out $in $libs
    description = LNK $out

rule ar
    command = $ar rcs $out $in
    description = LIB $out

rule run
    command = $in
    description = RUN $in

rule size
    command = size $in

rule compdb
    command = ninja -t compdb > $out
    generator = true
    description = COMPDB

build $b/trace_path: link $b/path_trace.o $
  $b/path_finder.o $
  $b/tilemap.o
  libs = -lfmt

build $b/pathfinder_tests: link $b/testrunner_main.o $
  $b/path_finder.o $
  $b/path_finder_tests.o $
  $b/tilemap.o $
  $b/tilemap_tests.o
  libs = -lfmt

build $b/path_trace.o: cxx src/path_trace.cc
build $b/path_finder.o: cxx src/path_finder.cc
build $b/tilemap.o: cxx src/tilemap.cc

build $b/path_finder_tests.o: cxx src/path_finder_tests.cc
build $b/tilemap_tests.o: cxx src/tilemap_tests.cc

build $b/testrunner_main.o: cxx lib/testrunner/src/testrunner_main.cc

build compile_commands.json: compdb | build.ninja

